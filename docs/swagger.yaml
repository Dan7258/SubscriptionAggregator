basePath: /
definitions:
  handlers.errorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.statusResponse:
    properties:
      message:
        type: string
    type: object
  models.Subscription:
    description: Subscription model for managing user subscriptions.
    properties:
      id:
        description: |-
          The unique identifier of the subscription (auto-generated by the database).
          Required: false
        type: integer
      price:
        description: |-
          The price of the subscription in currency units.
          Required: true
          Minimum: 0
        type: integer
      service_name:
        description: |-
          The name of the subscription service (e.g., "Yandex Plus").
          Required: true
        type: string
      start_date:
        description: |-
          The start date of the subscription in MM-YYYY format (e.g., "03-2025").
          Required: true
          Example: 03-2025
        type: string
      user_id:
        description: |-
          The unique identifier of the user (UUID format).
          Required: true
          Format: uuid
        type: string
    type: object
  models.SubscriptionFilters:
    description: Filters for retrieving subscriptions based on specific criteria.
    properties:
      end_date:
        description: |-
          The end date to filter subscriptions (in MM-YYYY format, e.g., "12-2025").
          Required: false
          Example: 12-2025
        type: string
      start_date:
        description: |-
          The start date to filter subscriptions (in MM-YYYY format, e.g., "03-2025").
          Required: false
          Example: 03-2025
        type: string
      user_id:
        description: |-
          The unique identifier of the user (UUID format) to filter subscriptions.
          Required: false
          Format: uuid
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST is a service for aggregating data about users online subscriptions.
  title: Subscription aggregator API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all subscriptions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subscription'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Get all subscriptions
      tags:
      - Subscriptions
  /subscriptions:
    post:
      consumes:
      - application/json
      description: Create a new subscription with the provided data. All fields (service_name,
        price, user_id, start_date) are required.
      parameters:
      - description: Subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Create a new subscription
      tags:
      - Subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a subscription using its ID
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Delete a subscription by ID
      tags:
      - Subscriptions
    get:
      consumes:
      - application/json
      description: Retrieve a subscription using its ID
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Get a subscription by ID
      tags:
      - Subscriptions
    patch:
      consumes:
      - application/json
      description: Update an existing subscription with the provided ID
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Update a subscription by ID
      tags:
      - Subscriptions
  /subscriptions/filters:
    post:
      consumes:
      - application/json
      description: Retrieve subscriptions based on provided filters
      parameters:
      - description: Subscription filters
        in: body
        name: filters
        required: true
        schema:
          $ref: '#/definitions/models.SubscriptionFilters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Get subscriptions by filters
      tags:
      - Subscriptions
swagger: "2.0"
